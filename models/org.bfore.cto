/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */


namespace org.bfore

asset MissionContract identified by missionContractId {
  o String missionContractId
  o Boolean completed default=false
  o Boolean mentorUsed default=false 
  o DateTime dueDate
  o DateTime reviewDate optional
  o DateTime mentorSubmissionDate optional
  o DateTime submissionDate optional
  o Integer earnedEducoin default=0
  o Boolean winner default=false
  o Boolean[] completedActivities optional
  o String[] filenames optional
  o String[] attachments optional 
  --> Mission mission
  --> Student student
  --> Mentor mentor optional
}

/**
* The activities to be completed inside a mission
 */
concept Activity{
  o String name
  o String description 
  o Integer educoin default = 0 
}

concept Review {
  o String title
  o String description
  o Double score
}
  
/**
* A mission to be complete from students to earn EduCoin
*/
asset Mission identified by missionId {
  o String missionId
  o String missionName
  o DateTime dueDate
  o String missionDescription optional
  o Integer educoin default = 0 // = to the sum of the educoin for each assignment
  o Integer bonusEducoin
  o Integer maxStudents
  o Integer mentorFare
  o Integer currentStudents default=0 
  o Activity[] activities  
  --> Campaign campaign
}

/**
* Items to be sold in the market place
 */
asset Item identified by itemId{
  o String itemId
  o String name
  o String description
  o Integer cost
  --> Business owner
}



/**
* A concept for a simple street address
*/
concept Address {
  o String city
  o String country
  o String street
  o String zip
}

/**
* An abstract participant type in this business network
*/
abstract participant Business identified by email {
  o String email
  o String firstName
  o String lastName
  o Address address optional
  o Integer educoinBalance default=0 optional
}

/** 
* A student is a type of participant in the network
*/
participant Student extends Business {
}

/**
* A mentor is a type of participant in the network
*/
participant Mentor extends Business {
  o Double reviewSum default=0.0 optional
  o Double reviewCount default=0.0 optional
  o Review[] reviews optional
}

/**
* A donor is a type of participant in the network
*/
participant Donor extends Business {
}

/**
* A vendor is a type of participant in the network
*/
participant Vendor extends Business {
}

/**
A campaign is also a participant, since it can transfer and own educoins.
 */
participant Campaign extends Business {
  o String campaignName
  o String campaignDescription
  o Integer fundingGoal default=0
  o Boolean funded // this means that the funding goal has been reached
  o Boolean completed // this means that all the activities have been added
}
  


/**
A donor can give Educoin to a campaign (funding) 
*/
transaction FundCampaign{
  o Integer educoinAmount
  o Integer realAmount optional
  --> Campaign campaign
  --> Donor donor
}

/**
A student enroll to  Mission 
 */
transaction EnrollStudentToMission {
  --> Mission mission
}

transaction AddMissionToCampaign {
  o String missionName
  o String missionDescription
  o DateTime dueDate
  o Boolean completeCampaign
  o Integer bonusEducoin
  o Integer maxStudents
  o Integer mentorFare 
  o Activity[] activities 
}

/**
A student complete a mission 
 */
transaction StudentCompleteMission {
  -->MissionContract missionContract 
  o Boolean[] completedActivities
}
  
transaction StudentSubmitMission {
 --> MissionContract missionContract
  o String[] attachments
  o String[] filenames
}
  
transaction StudentAskForMentor {
 --> MissionContract missionContract
  o String[] attachments
  o String[] filenames
 --> Mentor mentor
}
  
transaction MentorReview {
  --> MissionContract missionContract
  o String[] attachments
  o String[] filenames
}

transaction StudentLeaveReview {
  --> MissionContract missionContract
  o Review review
}

/**
A student buy an item
 */
transaction BuyItem {
  --> Item item 
}

/* 
* A vendor can create a new item
*/
transaction AddItem {
  o String name
  o String description
  o String cost
}
  

/**
Just for initializing a Demo
 */
transaction SetupDemo {
}